services:
  nginx:
    image: nginx:1.28.0-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - oauth2
    restart: unless-stopped
    networks:
      - general-network

  oauth2:
    image: bitnami/oauth2-proxy:latest
    container_name: oauth2
    entrypoint:
      - /bin/sh
      - -c 
      - |
        echo 'Waiting for Keycloak to start...'
        sleep 45;
        echo 'Starting oauth2-proxy...';
        oauth2-proxy 
    environment:
      OAUTH2_PROXY_COOKIE_SECURE: "false" # localhost, DUUUH
      OAUTH2_PROXY_OIDC_ISSUER_URL: "http://localhost/realms/devops-mission"
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost/oauth2/callback" # Also ensure this is set correctly
      # OAUTH2_PROXY_UPSTREAMS: "http://nocodb:8080"
      OAUTH2_PROXY_PROVIDER: "oidc"
      OAUTH2_PROXY_CLIENT_ID: "nocodb"
      OAUTH2_PROXY_CLIENT_SECRET: "meI8zNQlO1UuejjmINpJrFtrmLmL6LMR"
      OAUTH2_PROXY_COOKIE_SECRET: "5a2d08fe7466d3c9eff5d0bd85c70a7d"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
    extra_hosts:
      - "localhost:host-gateway"
    depends_on:
      - keycloak
    restart: unless-stopped
    networks:
      - general-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_URL: http://localhost
      KC_PROXY: "edge"
      KC_HTTP_ENABLED: "true"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://postgres:5432/${PG_DB_TAG}"
      KC_DB_USERNAME: ${PG_USER_TAG}
      KC_DB_PASSWORD: ${PG_PASSWORD_TAG}
      KEYCLOAK_ADMIN: ${KC_ADMIN_TAG}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD_TAG}
    command: start
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - general-network

  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NC_AUTH_TYPE: proxy
      NC_AUTH_PROXY_HEADER: "X-Forwarded-Email"
      NC_DB: "pg://postgres:5432?u=${PG_USER_TAG:-postgres}&p=${PG_PASSWORD_TAG:-password}&d=${PG_DB_TAG:-root_db}"
      NC_DISABLE_AUDIT: true
      NC_PUBLIC_URL: "http://localhost"
      NC_ADMIN_EMAIL: "changeme"
      NC_ADMIN_PASSWORD: "changeme"
    restart: unless-stopped
    volumes:
      - ./nocodb_data:/usr/app/data
    networks:
      - general-network

  postgres:
    image: postgres:15.13
    container_name: postgres
    environment:
      POSTGRES_DB: ${PG_DB_TAG}
      POSTGRES_USER: ${PG_USER_TAG}
      POSTGRES_PASSWORD: ${PG_PASSWORD_TAG}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD","pg_isready","-U","keycloak"]
      interval: 10s
    restart: unless-stopped
    networks:
      - general-network

volumes:
  postgres_data:
  nocodb_data:

networks:
  general-network: